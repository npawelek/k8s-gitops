---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: plex
  namespace: plex
  labels:
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
spec:
  replicas: 1
  revisionHistoryLimit: 2
  updateStrategy:
    type: RollingUpdate
  serviceName: plex
  selector:
    matchLabels:
      app.kubernetes.io/instance: plex
      app.kubernetes.io/name: plex
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: plex
        app.kubernetes.io/name: plex
      annotations:
        secret.reloader.stakater.com/reload: nathanpawelek-com-tls
    spec:
      nodeSelector:
        kubernetes.io/hostname: nuc
      automountServiceAccountToken: false
      initContainers:
      - name: generate-cert
        image: python:3.9-alpine
        command:
        - sh
        - -c
        - |
          apk add openssl build-base
          pip install kubernetes
          python3 /opt/get_cert_data.py
          openssl pkcs12 -export -out plex.nathanpawelek.com.pfx -inkey privkey.pem -in cert.pem -certfile chain.pem -passout pass:
          rm *.pem
          chmod 0400 plex.nathanpawelek.com.pfx
          chown 10000: plex.nathanpawelek.com.pfx
        workingDir: /tls
        volumeMounts:
        - name: kubeconfig
          mountPath: /root/.kube
        - name: get-certs-script
          mountPath: /opt/get_cert_data.py
          subPath: get_cert_data.py
        - name: certs
          mountPath: /tls
      containers:
      - name: plex
        image: plexinc/pms-docker:1.23.3.4707-ebb5fe9f3
        ports:
        - containerPort: 32400
          protocol: TCP
        env:
        - name: PLEX_CLAIM
          valueFrom:
            secretKeyRef:
              name: plex-secrets
              key: PLEX_CLAIM
        - name: TZ
          value: America/Chicago
        - name: PLEX_UID
          value: "10000"
        - name: PLEX_GID
          value: "10000"
        resources:
          limits:
            gpu.intel.com/i915: 1
        livenessProbe:
          httpGet:
            port: 32400
            path: /web/index.html
            scheme: HTTPS
          initialDelaySeconds: 30
          failureThreshold: 3
          successThreshold: 1
          periodSeconds: 20
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /data
          name: media
          readOnly: true
        - mountPath: /config
          name: config
        - mountPath: "/config/Library/Application Support/Plex Media Server/plex.nathanpawelek.com.pfx"
          name: certs
          subPath: plex.nathanpawelek.com.pfx
          readOnly: true
      volumes:
      - name: kubeconfig
        secret:
          secretName: kubeconfig
      - name: get-certs-script
        configMap:
          name: get-certs-script
      - name: certs
        emptyDir: {}
      - name: media
        nfs:
          path: /volume1/media
          server: 192.168.0.151
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: longhorn
      resources:
        requests:
          storage: 30Gi
