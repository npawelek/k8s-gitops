---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: sabnzbd
spec:
  interval: 1h
  maxHistory: 3
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
    - name: traefik
      namespace: traefik

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  chart:
    spec:
      # renovate: registryUrl=https://bjw-s-labs.github.io/helm-charts
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          main:
            image:
              repository: ghcr.io/home-operations/sabnzbd
              tag: 4.5.3@sha256:ecb57bd6257fbfbd9aee70d8ef3df8814b7270ae793fd1f44219ae73cacd519a

            envFrom:
              - secretRef:
                  name: sabnzbd-secrets

            env:
              TZ: ${TIMEZONE}
              SABNZBD__PORT: 8080
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.sabnzbd,
                sabnzbd.sabnzbd.svc,
                sabnzbd.sabnzbd.svc.cluster,
                sabnzbd.sabnzbd.svc.cluster.local,
                sabnzbd.nathanpawelek.com

            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                cpu: 100m
                memory: 1024Mi
              limits:
                memory: 8Gi

          vpn:
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.35.0@sha256:a98d1ec99e09a1b806aff7f0c3d8a133a8ede7d3d7a250b62029a39a61f01525

            envFrom:
              - secretRef:
                  name: primary-conf106

            env:
              TZ: ${TIMEZONE}
              VPN_SERVICE_PROVIDER: custom
              VPN_TYPE: wireguard
              FIREWALL_OUTBOUND_SUBNETS: "10.96.0.0/12"
              DOT: "off"
              DNS_KEEP_NAMESERVER: "off"
              DNS_ADDRESS: "10.96.0.10"
              BLOCK_MALICIOUS: "off"
              HTTPPROXY: "on"
              HTTPPROXY_LISTENING_ADDRESS: ":8888"
              HTTPPROXY_STEALTH: "on"
              HTTPPROXY_LOG: "on"
              SHADOWSOCKS: "off"

            ports:
              - name: proxy
                containerPort: 8888
                protocol: TCP

            securityContext:
              runAsUser: 0
              runAsGroup: 0
              capabilities:
                add:
                  - NET_ADMIN
                  - SYS_MODULE

    service:
      main:
        controller: main
        ports:
          http:
            port: 8080
            protocol: TCP
      proxy:
        controller: main
        type: ClusterIP
        ports:
          tinyproxy:
            port: 8888
            protocol: TCP
            targetPort: 8888
      ext-proxy:
        controller: main
        type: LoadBalancer
        loadBalancerIP: ${PROXY_LB}
        externalTrafficPolicy: Local
        ports:
          ext-tinyproxy:
            port: 8888
            protocol: TCP
            targetPort: 8888

    ingress:
      main:
        enabled: true
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: traefik-default-middlewares-chain@kubernetescrd
          traefik.ingress.kubernetes.io/router.tls.options: traefik-secure-tlsoptions@kubernetescrd
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:download
          hajimari.io/group: downloads
        hosts:
          - host: &host sabnzbd.${DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: nathanpawelek-com-tls

    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: sabnzbd-config
        globalMounts:
          - path: /config
      downloads:
        type: persistentVolumeClaim
        size: 100Gi
        accessMode: ReadWriteOnce
        storageClass: longhorn
        globalMounts:
          - path: /downloads
      library:
        type: nfs
        server: ${RACKNAS_ADDR}
        path: /volume1/media/Temp
        globalMounts:
          - path: /library/Temp
