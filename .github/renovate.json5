{
  "extends": [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "github>npawelek/k8s-gitops//.github/renovate/commitMessage",
    "github>npawelek/k8s-gitops//.github/renovate/labels",
    "github>npawelek/k8s-gitops//.github/renovate/semanticCommits"
  ],
  "timezone": "America/Chicago",
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "assignees": ["@npawelek"],
  "repositories": ["npawelek/k8s-gitops"],
  "flux": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  // Standard manifest files (https://docs.renovatebot.com/modules/manager/kubernetes/)
  "kubernetes": {
    "fileMatch": ["cluster/.+\\.ya?ml$"],
    "ignorePaths": ["cluster/base/"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+/helmrelease\\.yaml$"]
  },
  "regexManagers": [
    {
      "fileMatch": ["cluster/.+\\.yaml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to process sealed-secrets CRD
    {
      "fileMatch": [
        "cluster/crds/sealed-secrets/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to process cert-manager CRD
    {
      "fileMatch": [
        "cluster/crds/cert-manager/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/",
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to process Traefik CRD
    {
      "fileMatch": [
        "cluster/crds/traefik/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n",
      ],
      "datasourceTemplate": "helm"
    },
  ],
  "packageRules": [
    // Setup datasources
    {
      "matchDatasources": ["helm"],
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": ["docker"],
      "enabled": true,
      "commitMessageExtra": "to {{newVersion}}",
    },
    {
      "matchDatasources": ["docker"],
      "commitMessageTopic": "Docker image {{depName}}",
      "commitMessageExtra": "{{#if isSingleVersion}}{{{toVersion}}}{{else}}{{{newValue}}}{{/if}}",
      "updateTypes": ["major", "minor", "patch"]
    },
    // Version strategies
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/plex",
        "haveagitgat/tdarr",
        "haveagitgat/tdarr_node"
      ],
      "versioning": "loose"
    },
    {
      "matchDatasources": ["docker"],
      "automerge": true,
      "matchPackageNames": [
        "linuxserver/nzbget",
        "linuxserver/nzbhydra2",
        "linuxserver/resilio-sync"
      ],
      "versioning": "loose"
    },
    {
      "matchDatasources": ["docker"],
      "automerge": true,
      "automergeType": "branch",
      "requiredStatusChecks": null,
      "matchUpdateTypes": ["minor", "patch"],
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/radarr",
        "ghcr.io/k8s-at-home/sonarr"
      ]
    }
  ]
}
